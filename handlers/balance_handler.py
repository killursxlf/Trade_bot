from aiogram import Router, types
from aiogram.filters import Command
from services.binance_service import get_full_balance

router = Router()

@router.message(Command("balance"))
async def balance_reply(message: types.Message):
    user_id = message.from_user.id
    balance_data = get_full_balance(user_id)

    if not balance_data:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API-–∫–ª—é—á–∏.")
        return

    assets, total_balance_usdt = balance_data

    response = "üí∞ *–í–∞—à –±–∞–ª–∞–Ω—Å:*\n"
    for asset, amount, usdt_value in assets:
        response += f"üîπ {asset}: {amount:.6f} (~{usdt_value:.2f} USDT)\n"

    response += f"\nüíµ *–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–æ–≤:* {total_balance_usdt:.2f} USDT"

    await message.answer(response, parse_mode="Markdown")
